name: CI workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Step 1: Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 2: Create and activate a virtual environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests with nose.
        run: nosetests -v --with-spec --spec-color --with-coverage --cover-package=src

      # Step 3: Parallelize security scanning and documentation generation
      - name: Security scanning with Bandit
        run: |
          pip install bandit
          bandit -r src -f json -o bandit-report.json

      - name: Generate documentation with Sphinx
        run: |
          pip install sphinx
          mkdir -p docs
          cd docs
          sphinx-quickstart --sep --ext-autodoc --ext-viewcode --ext-intersphinx . --quiet --project "ChatGPT CI Task" --author "Taylor Finelli" --version "1.0" --release "1.0"

      # Step 4: Check for outdated dependencies
      - name: Check for outdated dependencies
        run: |
          pip install pip-check
          pip-check --format=plain